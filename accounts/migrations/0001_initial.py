# Generated by Django 3.2.18 on 2023-09-24 06:24

import accounts.validators
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=12)),
                ('role', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Vendor'), (2, 'Customer')], null=True)),
                ('date_joined', models.DateTimeField(default=datetime.datetime.now)),
                ('last_login', models.DateTimeField(default=datetime.datetime.now)),
                ('created_date', models.DateTimeField(default=datetime.datetime.now)),
                ('modified_date', models.DateTimeField(default=datetime.datetime.now)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_superadmin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.FileField(blank=True, null=True, upload_to='users/profile_pictures', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'jpeg']), accounts.validators.validate_file_mimetype])),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('country', models.CharField(blank=True, max_length=15, null=True)),
                ('pin_code', models.CharField(blank=True, max_length=6, null=True)),
                ('full_name_ic', models.CharField(blank=True, max_length=250, null=True)),
                ('ic_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'FIN'), (2, 'NRIC')], null=True)),
                ('fin_no', models.CharField(blank=True, max_length=9, null=True)),
                ('fin_expiry_date', models.CharField(blank=True, max_length=6, null=True)),
                ('ic_photo', models.FileField(blank=True, null=True, upload_to='users/ic_photos', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'jpeg']), accounts.validators.validate_file_mimetype])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('nationality', django_countries.fields.CountryField(max_length=2)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('modified_at', models.DateTimeField(default=datetime.datetime.now)),
                ('unit_no', models.CharField(blank=True, max_length=15, null=True)),
                ('alt_phone_number', models.CharField(blank=True, max_length=12, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ICProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name_ic', models.CharField(blank=True, max_length=250, null=True)),
                ('ic_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'FIN'), (2, 'NRIC')], null=True)),
                ('fin_no', models.CharField(blank=True, max_length=9, null=True)),
                ('fin_expiry_date', models.DateField(blank=True, null=True)),
                ('ic_photo', models.FileField(blank=True, null=True, upload_to='users/ic_photos', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'jpeg']), accounts.validators.validate_file_mimetype])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('nationality', django_countries.fields.CountryField(max_length=2)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('modified_at', models.DateTimeField(default=datetime.datetime.now)),
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('license_number', models.CharField(blank=True, max_length=10, null=True)),
                ('entity_type', models.CharField(blank=True, max_length=100, null=True)),
                ('company_address', models.CharField(blank=True, max_length=250, null=True)),
                ('license_document', models.FileField(blank=True, null=True, upload_to='users/liscence_document', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'jpeg']), accounts.validators.validate_file_mimetype])),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bank_Account_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_doc', models.FileField(blank=True, null=True, upload_to='users/account_info', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'jpeg']), accounts.validators.validate_file_mimetype])),
                ('bank_acc_holder_name', models.CharField(blank=True, max_length=250, null=True)),
                ('acc_no', models.CharField(blank=True, max_length=50, null=True)),
                ('branch_name', models.CharField(blank=True, max_length=250, null=True)),
                ('bank_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.bank')),
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
